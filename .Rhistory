getwd()
load(paste0(current_dir,"/windowed_data.RData")) %>% as.list()
require(tidyverse)
load(paste0(current_dir,"/windowed_data.RData")) %>% as.list()
load(paste0(getwd(),"/windowed_data.RData")) %>% as.list()
demo_data <- fread(paste0(getwd(),"/Demo_Data.csv"))
require(data.table)
demo_data <- fread(paste0(getwd(),"/Demo_Data.csv"))
source(paste0(getwd(),"/DBSCAN_Plume_Detection.R"))
## Run the plume detection on the demo data.
## Set the f_value (see paper) to be 0.03
dbscan_anomalies <- return_dbscan_anomalies(dd_to_analyze,f_value = 0.03)
dd_to_analyze <- demo_data %>%
dplyr::select(BC,CO2,NOx,UFP)
## Run the plume detection on the demo data.
## Set the f_value (see paper) to be 0.03
dbscan_anomalies <- return_dbscan_anomalies(dd_to_analyze,f_value = 0.03)
## Required functions
find_the_knee <- function(poll_data,min_pts){
tt <- sort(dbscan::kNNdist(poll_data,k=min_pts))
dist_subset <- tt[1:30]
for(i in 31:length(tt)){
if(tt[i] > (mean(dist_subset) + 3*sd(dist_subset))){
return(tt[i])
break
} else{
dist_subset <- c(dist_subset,tt[i])
}
}
return(tt[length(tt)])
}
return_dbscan_anomalies <- function(data,f_value){
scaled_data <- data %>%
dplyr::mutate_all(scale)
min_pts_param <- f_value*nrow(scaled_data)
current_eps <- find_the_knee(scaled_data,min_pts = min_pts_param)
db_clust <- dbscan::dbscan(scaled_data,minPts = min_pts_param,eps = current_eps,borderPoints = FALSE)
assignments <- db_clust$cluster
assignments[assignments==0] <- 2
print("Execution complete")
return(assignments)
}
source(paste0(getwd(),"/DBSCAN_Plume_Detection.R"))
require(data.table)
demo_data <- fread(paste0(getwd(),"/Demo_Data.csv"))
dd_to_analyze <- demo_data %>%
dplyr::select(BC,CO2,NOx,UFP)
## Run the plume detection on the demo data.
## Set the f_value (see paper) to be 0.03
dbscan_anomalies <- return_dbscan_anomalies(dd_to_analyze,f_value = 0.03)
dd_to_analyze <- dd_to_analyze %>%
cbind(.,"Anomaly"=dbscan_anomalies)
require(tidyverse)
ggplot(data=dd_to_analyze) +
geom_point(BC,CO2,color = Anomaly)
glimpse(dd_to_analyze)
ggplot(data=dd_to_analyze) +
geom_point(aes(BC,CO2,color = Anomaly))
ggplot(data=dd_to_analyze) +
geom_point(aes(BC,CO2,color = Anomaly)) +
scale_color_discrete(c("Black","Red"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(color = Anomaly) +
scale_color_discrete(c("Black","Red"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
scale_color_discrete(c("Black","Red"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = factor(Anomaly)))
dd_to_analyze <- dd_to_analyze %>%
cbind(.,"Anomaly"=dbscan_anomalies) %>%
dplyr::mutate(Anomaly = as.factor(Anomaly))
## Run the plume detection on the demo data.
## Set the f_value (see paper) to be 0.03
dbscan_anomalies <- return_dbscan_anomalies(dd_to_analyze,f_value = 0.03)
dd_to_analyze <- demo_data %>%
dplyr::select(BC,CO2,NOx,UFP)
dd_to_analyze <- dd_to_analyze %>%
cbind(.,"Anomaly"=dbscan_anomalies) %>%
dplyr::mutate(Anomaly = as.factor(Anomaly))
require(tidyverse)
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/m"~^3~)))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/m"*^3~)))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/m"*^3~")"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/m"~^3~")"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/"~m^3~")"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/"~m^3~")"),
y = bquote(CO[2]))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/"~m^3~")"),
y = bquote(CO[2]~" (ppm)"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/"~m^3~")"),
y = bquote(CO[2]~" (ppm)")) +
scale_color_manual(values = c("Black","Red"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/"~m^3~")"),
y = bquote(CO[2]~" (ppm)")) +
scale_color_manual(values = c("Black","Red"),labels = c("Normal","Anomaly"))
normal_percentage <- length(which(dd_to_analyze$Anomaly==1))/nrow(dd_to_analyze)*100
print(normal_percentage)
print(paste0("The number of normal points in this data set is: ", normal_percentage))
print(paste0("The number of normal points in this data set is: ", round(normal_percentage,2))
)
print(paste0("The number of normal points in this data set is: ", round(normal_percentage,2), "%"))
source("E:/Research/Plume_Detection_with_DBSCAN/DBSCAN_Demo.R", echo=TRUE)
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/"~m^3~")"),
y = bquote(CO[2]~" (ppm)")) +
scale_color_manual(values = c("Black","Red"),labels = c("Normal","Anomaly")) +
theme_minimal()
ggsave(filename = paste0(getwd(),"/Misc/DBSCAN_Illustration.png"))
ggplot(data=dd_to_analyze,aes(BC,CO2)) +
geom_point(aes(color = Anomaly)) +
labs(x = bquote("BC (ng/"~m^3~")"),
y = bquote(CO[2]~" (ppm)")) +
scale_color_manual(values = c("Black","Red"),labels = c("Normal","Anomaly")) +
theme_classic()
ggsave(filename = paste0(getwd(),"/Misc/DBSCAN_Illustration.png"))
View(dbscan_anomalies)
## Load packages
library(data.table)
library(tidyverse)
library(dbscan)
library(shiny)
dd <- fread("data/Demo_Data.csv")
glimpse(dd)
runApp()
runApp()
runApp()
runApp()
runApp()
glimpse(dd_subset)
glimpse(dd)
runApp()
runApp()
glimpse(dd_subset)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_point
runApp()
runApp()
getwd()
dat <- read.csv(paste0(getwd(),"/data/Demo_Data.csv"))
write.csv(dat, paste0(getwd(),"/data/Demo_Data.csv"), row.names = F)
dat <- read.csv(paste0(getwd(),"/data/Demo_Data.csv"))
head(data)
head(dat)
dat <- dat %>% select(-X)
write.csv(dat, paste0(getwd(),"/data/Demo_Data.csv"), row.names = F)
dat <- read.csv(paste0(getwd(),"/data/Demo_Data.csv"))
rm(dat)
dat <- read.csv(paste0(getwd(),"/data/Demo_Data.csv"))
rsconnect::setAccountInfo(name='bactkinson', token='5340A95A8B3F5A87C5C1AC2298A2E482', secret='L4Iwc8a7dXjQoPusW5Za1ZegDqeHboQbZWmTLoRZ')
getwd()
rsconnect::deployApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
